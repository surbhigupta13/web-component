{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "AlertBarService",
            "id": "injectable-AlertBarService-ea96c50e9fac83cc0e7a74c3c68060c6",
            "file": "projects/alert-bar/src/lib/alert-bar.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertBarService {\n\n  constructor() { }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "ButtonService",
            "id": "injectable-ButtonService-39a0fc33cb8f2a668c5bcc6907896f4a",
            "file": "projects/button/src/lib/button.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ButtonService {\n\n  constructor() { }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AlertBarComponent",
            "id": "component-AlertBarComponent-195790130b0b89531009f8ee8c518812",
            "file": "projects/alert-bar/src/lib/alert-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-alert-bar",
            "styleUrls": [],
            "styles": [],
            "template": "<p>\n  alert-bar works!\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ui-alert-bar',\n  template: `\n    <p>\n      alert-bar works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class AlertBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-0897363a8d1731b823c4eed1d755efb8",
            "file": "projects/button/src/lib/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-button",
            "styleUrls": [
                "button.component.scss"
            ],
            "styles": [],
            "template": "<button [disabled]=\"disabled\"\n(click)=\"onClick.emit($event)\"\n[class] = \"'btn' + ' ' + 'btn-'+buttontype + ' ' + 'icon-'+iconplacement\"\n>\n  <span *ngIf=\"iconname\" class=\"o-icon\">\n    <ui-icon [icon]=\"iconname\" [size]= \"iconsize\"></ui-icon>\n  </span>\n  <span *ngIf=\"text\">{{text}}</span>\n</button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttontype",
                    "defaultValue": "'neutral'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean"
                },
                {
                    "name": "iconname",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "iconplacement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "iconsize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "number"
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n@Component({\n  selector: 'ui-button',\n  template: `\n  <button [disabled]=\"disabled\"\n  (click)=\"onClick.emit($event)\"\n  [class] = \"'btn' + ' ' + 'btn-'+buttontype + ' ' + 'icon-'+iconplacement\"\n  >\n    <span *ngIf=\"iconname\" class=\"o-icon\">\n      <ui-icon [icon]=\"iconname\" [size]= \"iconsize\"></ui-icon>\n    </span>\n    <span *ngIf=\"text\">{{text}}</span>\n  </button>`,\n  styleUrls: ['button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n  @Input() text!: string;\n  @Input() disabled!: boolean;\n  @Output() onClick = new EventEmitter<Event>();\n  @Input() buttontype = 'neutral';\n  @Input() iconname!: string;\n  @Input() iconsize!: number;\n  @Input() iconplacement!: string;\n  constructor() { }\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn {\n    padding: 8px;\n    min-width: 40px;\n    border: 0px;\n    min-height: 24px;\n    font-size: 12px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    column-gap: 8px;\n    &.icon-right{\n        flex-direction: row-reverse;\n    }\n    &.icon-left{\n        flex-direction: row;\n    }\n    .o-icon{\n        display: inline-block;\n    }\n    &:disabled {\n        color: #586981;\n        background-color: #9FA9B7;\n        pointer-events: none;\n    }\n    &:hover{\n        cursor: pointer;\n        background-color: #E0E3E8;\n        border-color: #E0E3E8;\n        color: #000000;\n    }\n}\n.btn-neutral{\n    background-color: #3B4F6B;\n    color: #ffffff;\n    &:active{\n        background-color: #586981;\n        color: #ffffff;\n    }\n    \n}\n.btn-neutral-outline {\n    background-color: transparent;\n    color: #000000;\n    border: 1px solid #3B4F6B;\n}\n\n.btn-sandstone{\n    background-color: #CBA052;\n    color: #000000;\n    &:active{\n        background-color: #FFD180;\n        color: #000000;\n    } \n}\n.btn-sandstone-outline{\n    background-color: transparent;\n    color: #000000;\n    border: 1px solid #CBA052;\n}\n\n.btn-classic{\n    background-color: #0033A0;\n    color: #ffffff;\n    &:active{\n        background-color: #525CD2;\n        color: #ffffff;\n    }  \n}\n.btn-classic-outline{\n    background-color: transparent;\n    color: #000000;\n    border: 1px solid #0033A0;\n}\n.btn-sunrise{\n    background-color: #F65275;\n    color: #000000;\n    &:active{\n        background-color: #FF86A3;\n        color: #000000;\n    }  \n}\n.btn-sunrise-outline{\n    background-color: transparent;\n    color: #000000;\n    border: 1px solid #F65275;\n}\n.btn-carbon{\n    background-color: #3B4F6B;\n    color: #ffffff;\n    &:active{\n        background-color: #586981;\n        color: #ffffff;\n    } \n}\n.btn-carbon-outline{\n    background-color: transparent;\n    color: #000000;\n    border: 1px solid #3B4F6B;\n}\n.btn-azul{\n    background-color: #2D6BFF;\n    color: #ffffff;\n    &:active{\n        background-color: #7799FF;\n        color: #000000;\n    }  \n}\n.btn-azul-outline{\n    background-color: transparent;\n    color: #000000;\n    border: 1px solid #2D6BFF;\n}\n.btn-warmgray{\n    background-color: #9E978E;\n    color: #000000;\n    &:active{\n        background-color: #CFC8BE;\n        color: #000000;\n    } \n}\n.btn-warmgray-outline{\n    background-color: transparent;\n    color: #000000;\n    border: 1px solid #9E978E;\n}\n",
                    "styleUrl": "button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-662c4a1d2057d5f3251187b48865838f",
            "file": "projects/button/src/lib/icons/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-icon",
            "styleUrls": [
                "icon.component.scss"
            ],
            "styles": [],
            "template": "<span [class] = \"'material-icons' + ' ' + 'o-'+size\">{{icon}}</span>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, EventEmitter, Sanitizer, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'ui-icon',\n  template: `\n    <span [class] = \"'material-icons' + ' ' + 'o-'+size\">{{icon}}</span>\n  `,\n  styleUrls: ['icon.component.scss']\n})\nexport class IconComponent implements OnInit {\n  @Input() icon! : string;\n  @Input() size! : number;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".material-icons{\n    vertical-align: middle;\n}\n.material-icons.o-16 { \n    font-size: 16px; \n}\n.material-icons.o-18 { \n    font-size: 18px; \n}\n.material-icons.o-24 { \n    font-size: 24px; \n}\n.material-icons.o-36 { \n    font-size: 36px; \n}\n.material-icons.o-48 { \n    font-size: 48px; \n}",
                    "styleUrl": "icon.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ]
        }
    ],
    "modules": [
        {
            "name": "AlertBarModule",
            "id": "module-AlertBarModule-329b6c71166cb183caf7953172c58850",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/alert-bar/src/lib/alert-bar.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { AlertBarComponent } from './alert-bar.component';\n\n\n\n@NgModule({\n  declarations: [\n    AlertBarComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    AlertBarComponent\n  ]\n})\nexport class AlertBarModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AlertBarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AlertBarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-4b9c7bc14a3389ce09fabcfd56d58399",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/elements/src/app/app.module.ts",
            "methods": [
                {
                    "name": "ngDoBootstrap",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "sourceCode": "import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Injector } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { ButtonModule, ButtonComponent } from 'button';\nimport { AlertBarModule, AlertBarComponent} from 'alert-bar';\n@NgModule({\n  imports: [\n    BrowserModule,\n    ButtonModule,\n    AlertBarModule\n  ],\n  providers: []\n})\nexport class AppModule {\n\n  constructor(private injector: Injector){}\n\n  ngDoBootstrap(){\n    const button = createCustomElement(ButtonComponent, { injector: this.injector })\n    customElements.define(\"ui-button\", button);\n    const alertBar = createCustomElement(AlertBarComponent, { injector: this.injector })\n    customElements.define(\"ui-alert-bar\", alertBar);\n  }\n\n }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AlertBarModule"
                        },
                        {
                            "name": "ButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonModule",
            "id": "module-ButtonModule-10d0c47dc608421163c29864a94939dd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/button/src/lib/button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule }  from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser'\nimport { ButtonComponent } from './button.component';\nimport { IconComponent } from './icons/icon.component';\n@NgModule({\n  declarations: [\n    ButtonComponent,\n    IconComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  exports: [\n    ButtonComponent,\n    IconComponent\n  ]\n})\nexport class ButtonModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "IconComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "IconComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "azulButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/buttons/Azul-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"azul\"),\n    onClick: () => action('Button clicked')('Click'),\n    }\n})"
            },
            {
                "name": "azulIconButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/icon-buttons/Azul-icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"\n      ></ui-button>`,\n  props: {\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"azul\"),\n  onClick: () => action('Button clicked')('Click'),\n  }\n})"
            },
            {
                "name": "azulTextIconButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/text-icon-buttons/Azul-text-icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"\n      [iconplacement]=\"iconplacement\"\n      ></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    iconplacement: select(\n      \"Align Icon\", \n      [\"left\", \"right\"], \"left\"),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"azul\"),\n  onClick: () => action('Button clicked')('Click'),\n  }\n})"
            },
            {
                "name": "classicButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/buttons/Classic-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"classic\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
            },
            {
                "name": "classicIconButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/icon-buttons/Classic-icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"></ui-button>`,\n  props: {\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"classic\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
            },
            {
                "name": "classicTextIconButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/text-icon-buttons/Classic-text-icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"\n      [iconplacement]=\"iconplacement\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    iconplacement: select(\n      \"Align Icon\", \n      [\"left\", \"right\"], \"left\"),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"classic\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/alert-bar/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/button/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/elements/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/elements/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/elements/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "neutralButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/buttons/Neutral-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"neutral\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
            },
            {
                "name": "neutralIconButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/icon-buttons/Neutral-icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button\n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"></ui-button>`,\n  props: {\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"neutral\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
            },
            {
                "name": "neutralTextIconButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/text-icon-buttons/Neutral-text-icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"\n      [iconplacement]=\"iconplacement\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    iconplacement: select(\n      \"Align Icon\", \n      [\"left\", \"right\"], \"left\"),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"neutral\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/alert-bar/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/button/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/elements/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "sandstoneButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/buttons/Sandstone-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"sandstone\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
            },
            {
                "name": "sandstoneIconButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/icon-buttons/Sandstone-icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"></ui-button>`,\n  props: {\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"sandstone\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
            },
            {
                "name": "sandstoneTextIconButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/text-icon-buttons/Sandstone-text-icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"\n      [iconplacement]=\"iconplacement\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    iconplacement: select(\n      \"Align Icon\", \n      [\"left\", \"right\"], \"left\"),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"sandstone\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
            },
            {
                "name": "sunriseButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/buttons/Sunrise-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"sunrise\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
            },
            {
                "name": "sunriseIconButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/icon-buttons/Sunrise-icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"></ui-button>`,\n  props: {\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"sunrise\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
            },
            {
                "name": "sunriseTextIconButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/text-icon-buttons/Sunrise-text-icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"\n      [iconplacement]=\"iconplacement\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    iconplacement: select(\n      \"Align Icon\", \n      [\"left\", \"right\"], \"left\"),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"sunrise\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
            },
            {
                "name": "warmgrayButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/buttons/Warmgray-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"warmgray\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
            },
            {
                "name": "warmgrayIconButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/icon-buttons/Warmgray-icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"></ui-button>`,\n  props: {\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"warmgray\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
            },
            {
                "name": "warmgrayTextIconButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/text-icon-buttons/Warmgray-text-icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"\n      [iconplacement]=\"iconplacement\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    iconplacement: select(\n      \"Align Icon\", \n      [\"left\", \"right\"], \"left\"),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"warmgray\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "stories/buttons/Azul-button.stories.ts": [
                {
                    "name": "azulButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/buttons/Azul-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"azul\"),\n    onClick: () => action('Button clicked')('Click'),\n    }\n})"
                }
            ],
            "stories/icon-buttons/Azul-icon-button.stories.ts": [
                {
                    "name": "azulIconButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/icon-buttons/Azul-icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"\n      ></ui-button>`,\n  props: {\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"azul\"),\n  onClick: () => action('Button clicked')('Click'),\n  }\n})"
                }
            ],
            "stories/text-icon-buttons/Azul-text-icon-button.stories.ts": [
                {
                    "name": "azulTextIconButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/text-icon-buttons/Azul-text-icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"\n      [iconplacement]=\"iconplacement\"\n      ></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    iconplacement: select(\n      \"Align Icon\", \n      [\"left\", \"right\"], \"left\"),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"azul\"),\n  onClick: () => action('Button clicked')('Click'),\n  }\n})"
                }
            ],
            "stories/buttons/Classic-button.stories.ts": [
                {
                    "name": "classicButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/buttons/Classic-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"classic\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
                }
            ],
            "stories/icon-buttons/Classic-icon-button.stories.ts": [
                {
                    "name": "classicIconButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/icon-buttons/Classic-icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"></ui-button>`,\n  props: {\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"classic\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
                }
            ],
            "stories/text-icon-buttons/Classic-text-icon-button.stories.ts": [
                {
                    "name": "classicTextIconButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/text-icon-buttons/Classic-text-icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"\n      [iconplacement]=\"iconplacement\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    iconplacement: select(\n      \"Align Icon\", \n      [\"left\", \"right\"], \"left\"),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"classic\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
                }
            ],
            "projects/alert-bar/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/alert-bar/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/alert-bar/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/button/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/button/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/button/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/elements/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/elements/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/elements/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/elements/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/elements/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "projects/elements/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/elements/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "stories/buttons/Neutral-button.stories.ts": [
                {
                    "name": "neutralButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/buttons/Neutral-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"neutral\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
                }
            ],
            "stories/icon-buttons/Neutral-icon-button.stories.ts": [
                {
                    "name": "neutralIconButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/icon-buttons/Neutral-icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button\n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"></ui-button>`,\n  props: {\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"neutral\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
                }
            ],
            "stories/text-icon-buttons/Neutral-text-icon-button.stories.ts": [
                {
                    "name": "neutralTextIconButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/text-icon-buttons/Neutral-text-icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"\n      [iconplacement]=\"iconplacement\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    iconplacement: select(\n      \"Align Icon\", \n      [\"left\", \"right\"], \"left\"),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"neutral\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
                }
            ],
            "stories/buttons/Sandstone-button.stories.ts": [
                {
                    "name": "sandstoneButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/buttons/Sandstone-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"sandstone\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
                }
            ],
            "stories/icon-buttons/Sandstone-icon-button.stories.ts": [
                {
                    "name": "sandstoneIconButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/icon-buttons/Sandstone-icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"></ui-button>`,\n  props: {\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"sandstone\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
                }
            ],
            "stories/text-icon-buttons/Sandstone-text-icon-button.stories.ts": [
                {
                    "name": "sandstoneTextIconButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/text-icon-buttons/Sandstone-text-icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"\n      [iconplacement]=\"iconplacement\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    iconplacement: select(\n      \"Align Icon\", \n      [\"left\", \"right\"], \"left\"),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"sandstone\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
                }
            ],
            "stories/buttons/Sunrise-button.stories.ts": [
                {
                    "name": "sunriseButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/buttons/Sunrise-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"sunrise\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
                }
            ],
            "stories/icon-buttons/Sunrise-icon-button.stories.ts": [
                {
                    "name": "sunriseIconButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/icon-buttons/Sunrise-icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"></ui-button>`,\n  props: {\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"sunrise\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
                }
            ],
            "stories/text-icon-buttons/Sunrise-text-icon-button.stories.ts": [
                {
                    "name": "sunriseTextIconButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/text-icon-buttons/Sunrise-text-icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"\n      [iconplacement]=\"iconplacement\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    iconplacement: select(\n      \"Align Icon\", \n      [\"left\", \"right\"], \"left\"),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"sunrise\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
                }
            ],
            "stories/buttons/Warmgray-button.stories.ts": [
                {
                    "name": "warmgrayButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/buttons/Warmgray-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"warmgray\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
                }
            ],
            "stories/icon-buttons/Warmgray-icon-button.stories.ts": [
                {
                    "name": "warmgrayIconButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/icon-buttons/Warmgray-icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"></ui-button>`,\n  props: {\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"warmgray\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
                }
            ],
            "stories/text-icon-buttons/Warmgray-text-icon-button.stories.ts": [
                {
                    "name": "warmgrayTextIconButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/text-icon-buttons/Warmgray-text-icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: any) => ({\n  template:  `\n    <ui-button \n      [text]=\"text\" \n      [buttontype]=\"buttontype\" \n      (onClick)=\"onClick($event)\" \n      [disabled]=\"disabled\"\n      [iconname]=\"iconname\"\n      [iconsize]=\"iconsize\"\n      [iconplacement]=\"iconplacement\"></ui-button>`,\n  props: {\n    text: 'Button',\n    disabled : boolean('disabled', false),\n    iconname: 'edit',\n    iconsize: '16',\n    iconplacement: select(\n      \"Align Icon\", \n      [\"left\", \"right\"], \"left\"),\n    buttontype :  select(\n      \"Button type\",\n      [\"neutral\", \"neutral-outline\",  \n        \"sandstone\", \"sandstone-outline\", \n        \"classic\", \"classic-outline\" , \n        \"sunrise\", \"sunrise-outline\",\n        \"carbon\", \"carbon-outline\",\n        \"azul\", \"azul-outline\",\n        \"warmgray\", \"warmgray-outline\"],\n      \"warmgray\"),\n    onClick: () => action('Button clicked')('Click'),\n  }\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/alert-bar/src/lib/alert-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlertBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/alert-bar/src/lib/alert-bar.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AlertBarService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/alert-bar/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/alert-bar/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/button/src/lib/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/button/src/lib/button.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ButtonService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/button/src/lib/icons/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/button/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/button/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/elements/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/elements/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/elements/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/elements/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/buttons/Azul-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "azulButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/buttons/Classic-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "classicButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/buttons/Neutral-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "neutralButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/buttons/Sandstone-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sandstoneButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/buttons/Sunrise-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sunriseButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/buttons/Warmgray-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "warmgrayButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/icon-buttons/Azul-icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "azulIconButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/icon-buttons/Classic-icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "classicIconButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/icon-buttons/Neutral-icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "neutralIconButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/icon-buttons/Sandstone-icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sandstoneIconButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/icon-buttons/Sunrise-icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sunriseIconButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/icon-buttons/Warmgray-icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "warmgrayIconButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/text-icon-buttons/Azul-text-icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "azulTextIconButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/text-icon-buttons/Classic-text-icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "classicTextIconButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/text-icon-buttons/Neutral-text-icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "neutralTextIconButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/text-icon-buttons/Sandstone-text-icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sandstoneTextIconButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/text-icon-buttons/Sunrise-text-icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sunriseTextIconButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/text-icon-buttons/Warmgray-text-icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "warmgrayTextIconButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}